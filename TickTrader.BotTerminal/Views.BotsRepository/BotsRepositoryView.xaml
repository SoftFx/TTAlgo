<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:l="clr-namespace:TickTrader.BotTerminal"
                    xmlns:cal="http://www.caliburnproject.org"
                    xmlns:fa="http://schemas.awesome.incremented/wpf/xaml/fontawesome.sharp">

    <SolidColorBrush x:Key="UpdateAvailableColor" Color="DodgerBlue"/>
    <SolidColorBrush x:Key="SelectedUpdateAvailableColor" Color="RoyalBlue"/>

    <Style TargetType="CheckBox">
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>

    <Style x:Key="HyperlinkStyledButton" TargetType="Button" >
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <TextBlock Foreground="DodgerBlue" Text="{TemplateBinding Content}" 
                               TextWrapping="Wrap"
                               TextDecorations="Underline" 
                               Cursor="Hand"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ListViewUnselectedItem" TargetType="ListViewItem">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListViewItem}">
                    <ContentPresenter />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="l:FlatButton" BasedOn="{StaticResource FlatButtonMainStyle}">
        <Setter Property="Background" Value="{DynamicResource Dialog_ButtonBackground}"/>
        <Setter Property="HighlightBackground" Value="{DynamicResource Dialog_ButtonHighlightBackground}"/>
        <Setter Property="Padding" Value="4 0"/>
    </Style>

    <Style x:Key="ContentSplitter" TargetType="Rectangle">
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="Fill" Value="Black"/>
        <Setter Property="Width" Value="0.3"/>
        <Setter Property="Margin" Value="5 0"/>
    </Style>

    <Style x:Key="SearchBlock" TargetType="TextBox">
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Height" Value="26"/>
        <Setter Property="Width" Value="250"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBoxBase}">
                    <Border SnapsToDevicePixels="True"
                            BorderThickness="1.5"
                            BorderBrush="{DynamicResource Dialog_ButtonBorderColor}"
                            Background="{TemplateBinding Background}"
                            CornerRadius="3"
                            Padding="5 0">
                        <Grid>
                            <ScrollViewer x:Name="PART_ContentHost" Focusable="False" Background="{x:Null}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            <TextBlock x:Name="PART_Message"
                                Margin="2 0"
                                IsHitTestVisible="False"
                                Opacity="0.6"
                                Padding="0"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                Foreground="{TemplateBinding Foreground}"
                                Text="Search bot by name"
                                Visibility="Collapsed" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Text}" Value="">
                            <Setter TargetName="PART_Message" Property="Visibility" Value="Visible" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ToolButton" TargetType="Button">
        <Setter Property="FontFamily" Value="/FontAwesome.Sharp;component/fonts/#Font Awesome 6 Free Solid"/>
        <Setter Property="Height" Value="20"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Margin" Value="5 0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="BaseToolButton" BasedOn="{StaticResource ToolButton}" TargetType="Button">
        <Setter Property="Foreground" Value="Gray"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="Black"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="WebToolButton" BasedOn="{StaticResource ToolButton}" TargetType="Button">
        <Setter Property="Foreground" Value="{StaticResource UpdateAvailableColor}"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{StaticResource SelectedUpdateAvailableColor}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ToolToggleButton" TargetType="ToggleButton">
        <Setter Property="Height" Value="20"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SpinnerStyle" TargetType="fa:IconBlock">
        <Setter Property="Icon" Value="Spinner"/>
        <Setter Property="FontSize" Value="50"/>
        <Setter Property="fa:Awesome.SpinDuration" Value="4"/>
        <Setter Property="fa:Awesome.Spin" Value="True"/>
    </Style>

    <Style x:Key="PackageSpinnerStyle" TargetType="fa:IconBlock" BasedOn="{StaticResource SpinnerStyle}">
        <Setter Property="Foreground" Value="{StaticResource UpdateAvailableColor}"/>
        <Setter Property="FontSize" Value="20"/>
    </Style>

    <ControlTemplate x:Key="SelectedMetadataControl" TargetType="Control">
        <Grid Margin="5 0">
            <Grid.Resources>
                <Style x:Key="TitleName" TargetType="TextBlock">
                    <Setter Property="Margin" Value="0 5 0 0"/>
                    <Setter Property="FontWeight" Value="Bold"/>
                </Style>
            </Grid.Resources>

            <Grid.RowDefinitions>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>

            <TextBlock Text="{Binding Name}" FontSize="20" FontWeight="Bold" Margin="0 0 0 10"/>

            <Grid Grid.Row="1">
                <Grid.Resources>
                    <Style x:Key="PropertyName" TargetType="TextBlock">
                        <Setter Property="Margin" Value="0 5"/>
                        <Setter Property="FontWeight" Value="Bold"/>
                    </Style>

                    <Style TargetType="TextBlock">
                        <Setter Property="Margin" Value="10 5"/>
                    </Style>
                </Grid.Resources>

                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>

                <Grid.RowDefinitions>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                </Grid.RowDefinitions>

                <TextBlock Grid.Row="0" Style="{StaticResource PropertyName}" Text="Author:"/>
                <TextBlock Grid.Row="0" Grid.Column="1" Text="{Binding Author.Value}"/>

                <TextBlock Grid.Row="1" Style="{StaticResource PropertyName}" Text="Source:"/>
                <Button Grid.Row="1" Grid.Column="1" Content="{Binding Source.Value}" Margin="10 5" 
                        Style="{StaticResource HyperlinkStyledButton}" cal:Message.Attach="OpenSourceInBrowser"/>

                <TextBlock Grid.Row="2" Style="{StaticResource PropertyName}" Text="Category:"/>
                <TextBlock Grid.Row="2" Grid.Column="1" Text="{Binding Category.Value}"/>

                <TextBlock Grid.Row="3" Style="{StaticResource PropertyName}" Text="Copyright:"/>
                <TextBlock Grid.Row="3" Grid.Column="1" Text="{Binding Copyright.Value}"/>

                <TextBlock Grid.Row="4" Style="{StaticResource PropertyName}" Text="Version:" Visibility="{Binding IsRemote}"/>
                <TextBlock Grid.Row="4" Grid.Column="1" Text="{Binding Version.Value}" Visibility="{Binding IsRemote}"/>

                <TextBlock Grid.Row="5" Style="{StaticResource PropertyName}" Text="Api version:" Visibility="{Binding IsRemote}"/>
                <TextBlock Grid.Row="5" Grid.Column="1" Text="{Binding ApiVersion.Value}" Visibility="{Binding IsRemote}"/>

                <TextBlock Grid.Row="6" Style="{StaticResource PropertyName}" Text="Last update:" Visibility="{Binding IsRemote}"/>
                <TextBlock Grid.Row="6" Grid.Column="1" Text="{Binding BuildData.Value}"/>

                <TextBlock Grid.Row="7" Style="{StaticResource PropertyName}" Text="Package size:" Visibility="{Binding IsRemote}"/>
                <TextBlock Grid.Row="7" Grid.Column="1" Text="{Binding PackageSize.Value}" Visibility="{Binding IsRemote}"/>
            </Grid>

            <TextBlock Grid.Row="2" Text="Description" Style="{StaticResource TitleName}"/>
            <TextBlock Grid.Row="3" Text="{l:UpdateBind Description.Value}" 
                       HorizontalAlignment="Stretch" TextWrapping="WrapWithOverflow"/>

            <Grid Grid.Row="4" Margin="0 10 0 0" Visibility="{l:BoolToVisBind CanUpload.Value}">
                <Grid.Resources>
                    <Style TargetType="TextBlock">
                        <Setter Property="Foreground" Value="{StaticResource UpdateAvailableColor}"/>
                        <Setter Property="FontSize" Value="14"/>
                        <Setter Property="VerticalAlignment" Value="Center"/>
                    </Style>
                </Grid.Resources>

                <Grid.RowDefinitions>
                    <RowDefinition Height="30"/>
                    <RowDefinition Height="auto"/>
                </Grid.RowDefinitions>

                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="90"/>
                    </Grid.ColumnDefinitions>

                    <TextBlock Text="{l:UpdateBind RemoteVersion.Value, StringFormat=New version {0} is available!}" Visibility="{Binding IsLocal}"/>

                    <l:FlatButton Grid.Column="1" cal:Message.Attach="DownloadPackage" Visibility="{l:InvBoolToVisBind IsUploading.Value}"
                                  cal:Action.TargetWithoutContext="{l:UpdateBind RelativeSource={RelativeSource Mode=Self}, Path=DataContext}">
                        <l:FlatButton.Style>
                            <Style TargetType="l:FlatButton" BasedOn="{StaticResource FlatButtonMainStyle}">
                                <Setter Property="FontSize" Value="14"/>
                                <Setter Property="Width" Value="80"/>
                                <Setter Property="Content" Value="Download"/>
                                <Setter Property="Foreground" Value="{StaticResource UpdateAvailableColor}"/>
                                <Setter Property="Background" Value="{DynamicResource Dialog_ButtonBackground}"/>
                                <Setter Property="BorderBrush" Value="{StaticResource UpdateAvailableColor}"/>

                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Foreground" Value="{StaticResource SelectedUpdateAvailableColor}"/>
                                        <Setter Property="BorderBrush" Value="{StaticResource SelectedUpdateAvailableColor}"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </l:FlatButton.Style>
                    </l:FlatButton>

                    <fa:IconBlock Grid.Column="1" Style="{StaticResource PackageSpinnerStyle}" HorizontalAlignment="Center"
                                  Visibility="{l:BoolToVisBind IsUploading.Value}"/>
                </Grid>

                <Grid Grid.Row="1">
                    <Grid.Resources>
                        <Style TargetType="TextBlock">
                            <Setter Property="TextWrapping" Value="Wrap"/>
                            <Setter Property="FontSize" Value="11"/>
                            <Setter Property="Margin" Value="0 10"/>
                        </Style>
                    </Grid.Resources>

                    <TextBlock Text="{l:UpdateBind ResultMessage.Value}" Foreground="Green" Visibility="{l:EmptyToVisBind ResultMessage.Value}"/>
                    <TextBlock Text="{l:UpdateBind ErrorMessage.Value}" Foreground="Red" Visibility="{l:EmptyToVisBind ErrorMessage.Value}"/>
                </Grid>
            </Grid>

            <Grid Grid.Row="5" Visibility="{Binding IsLocal}">
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                </Grid.RowDefinitions>

                <TextBlock Grid.Row="0" Text="Installed" Style="{StaticResource TitleName}"/>
                <ListView Grid.Row="1" HorizontalContentAlignment="Stretch" ItemsSource="{Binding Versions}" Margin="0 2" ItemContainerStyle="{StaticResource ListViewUnselectedItem}">
                    <ListView.Template>
                        <ControlTemplate>
                            <Grid>
                                <Grid.Resources>
                                    <Style TargetType="TextBlock">
                                        <Setter Property="FontWeight" Value="DemiBold"/>
                                        <Setter Property="HorizontalAlignment" Value="Center"/>
                                        <Setter Property="Padding" Value="0 3"/>
                                    </Style>
                                </Grid.Resources>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="auto"/>
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>
                                <Grid Grid.Row="0" Background="WhiteSmoke">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="30"/>
                                        <ColumnDefinition Width="70"/>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="100"/>
                                    </Grid.ColumnDefinitions>

                                    <TextBlock Grid.Column="1" Text="Bot Version"/>
                                    <TextBlock Grid.Column="2" Text="Api" />
                                </Grid>
                                <ItemsPresenter Grid.Row="1"/>
                            </Grid>
                        </ControlTemplate>
                    </ListView.Template>
                    <ListView.ItemTemplate>
                        <DataTemplate>
                            <Border BorderThickness="0 0 0 1" BorderBrush="LightGray" Margin="0 2">
                                <Grid>
                                    <Grid.Resources>
                                        <Style TargetType="TextBlock">
                                            <Setter Property="VerticalAlignment" Value="Center"/>
                                            <Setter Property="HorizontalAlignment" Value="Center"/>
                                        </Style>
                                    </Grid.Resources>

                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="30"/>
                                        <ColumnDefinition Width="70"/>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="100"/>
                                    </Grid.ColumnDefinitions>

                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="auto"/>
                                        <RowDefinition Height="auto"/>
                                    </Grid.RowDefinitions>

                                    <ToggleButton x:Name="infoBtn" Grid.Column="0" ToolTip="Show more info">
                                        <ToggleButton.Style>
                                            <Style TargetType="{x:Type ToggleButton}" BasedOn="{StaticResource ToolToggleButton}">
                                                <Setter Property="FontFamily" Value="/FontAwesome.Sharp;component/fonts/#Font Awesome 6 Free Solid"/>
                                                <Setter Property="Foreground" Value="SlateGray"/>
                                                <Style.Triggers>
                                                    <Trigger Property="IsMouseOver" Value="True">
                                                        <Setter Property="Foreground" Value="Black"/>
                                                    </Trigger>
                                                    <Trigger Property="IsChecked" Value="True">
                                                        <Setter Property="Content" Value="{fa:Icon ChevronUp}"/>
                                                    </Trigger>
                                                    <Trigger Property="IsChecked" Value="False">
                                                        <Setter Property="Content" Value="{fa:Icon ChevronDown}"/>
                                                    </Trigger>
                                                </Style.Triggers>
                                            </Style>
                                        </ToggleButton.Style>
                                    </ToggleButton>

                                    <TextBlock Grid.Column="1" Text="{Binding Version}" />
                                    <TextBlock Grid.Column="2" Text="{Binding ApiVersion}" />

                                    <Button Grid.Column="3" Content="{fa:Icon Xmark}" DataContext="{Binding PackageInfo}"
                                        cal:Message.Attach="RemovePackage" IsEnabled="{l:UpdateBind CanRemove.Value}">
                                        <Button.Style>
                                            <Style TargetType="{x:Type Button}" BasedOn="{StaticResource ToolButton}">
                                                <Setter Property="HorizontalAlignment" Value="Right"/>
                                                <Setter Property="Foreground" Value="Red"/>
                                                <Setter Property="ToolTip" Value="Remove the bot package"/>
                                                <Setter Property="ToolTipService.ShowOnDisabled" Value="True"/>
                                                <Style.Triggers>
                                                    <Trigger Property="IsMouseOver" Value="True">
                                                        <Setter Property="Foreground" Value="DarkRed"/>
                                                    </Trigger>
                                                    <Trigger Property="IsEnabled" Value="False">
                                                        <Setter Property="Foreground" Value="Gray"/>
                                                        <Setter Property="ToolTip" Value="{l:UpdateBind DisabledRemoveTooltip.Value}"/>
                                                    </Trigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Button.Style>
                                    </Button>

                                    <Grid Grid.ColumnSpan="4" Grid.Row="1" Margin="10 0 0 0" DataContext="{Binding PackageInfo}"
                                          Visibility="{l:BoolToVisBind IsChecked, ElementName=infoBtn}">

                                        <Grid.Resources>
                                            <Style TargetType="TextBlock">
                                                <Setter Property="HorizontalAlignment" Value="Left"/>
                                                <Setter Property="TextWrapping" Value="WrapWithOverflow"/>
                                            </Style>
                                        </Grid.Resources>

                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="90"/>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="auto"/>
                                        </Grid.ColumnDefinitions>

                                        <Grid.RowDefinitions>
                                            <RowDefinition/>
                                            <RowDefinition/>
                                            <RowDefinition/>
                                            <RowDefinition/>
                                            <RowDefinition/>
                                        </Grid.RowDefinitions>

                                        <TextBlock Grid.Row="0" Grid.Column="0" Text="Created:" FontWeight="DemiBold"/>
                                        <TextBlock Grid.Row="0" Grid.Column="1" Text="{Binding CreatedDate}"/>

                                        <TextBlock Grid.Row="1" Grid.Column="0" Text="Last modify:" FontWeight="DemiBold"/>
                                        <TextBlock Grid.Row="1" Grid.Column="1" Text="{Binding LastModify}"/>

                                        <TextBlock Grid.Row="2" Grid.Column="0" Text="Package Id:" FontWeight="DemiBold"/>
                                        <TextBlock Grid.Row="2" Grid.Column="1" Text="{Binding Id}" />

                                        <TextBlock Grid.Row="3" Grid.Column="0" Text="Package size:" FontWeight="DemiBold"/>
                                        <TextBlock Grid.Row="3" Grid.Column="1" Text="{Binding Size}"/>

                                        <TextBlock Grid.Row="4" Grid.Column="0" Text="Package path:" FontWeight="DemiBold"/>
                                        <TextBlock Grid.Row="4" Grid.Column="1" Text="{Binding Path}"/>

                                        <Button Grid.Row="4" Grid.Column="2" Content="{fa:Icon FolderOpen}" 
                                            cal:Message.Attach="OpenExplorer" ToolTip="Open folder with package">
                                            <Button.Style>
                                                <Style TargetType="{x:Type Button}" BasedOn="{StaticResource BaseToolButton}">
                                                    <Setter Property="HorizontalAlignment" Value="Right"/>
                                                    <Setter Property="VerticalAlignment" Value="Top"/>
                                                </Style>
                                            </Button.Style>
                                        </Button>
                                    </Grid>
                                </Grid>
                            </Border>
                        </DataTemplate>
                    </ListView.ItemTemplate>
                </ListView>
            </Grid>
        </Grid>
    </ControlTemplate>

    <DataTemplate x:Key="BotMetadataItemTemplate">
        <Border BorderThickness="0 0 0 1" BorderBrush="LightGray">
            <Grid Height="60" Margin="10 0">
                <Grid.Resources>
                    <Style TargetType="TextBlock">
                        <Setter Property="FontSize" Value="14"/>
                    </Style>
                </Grid.Resources>

                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="60"/>
                </Grid.ColumnDefinitions>

                <CheckBox Grid.Column="0" Grid.RowSpan="2" IsChecked="{l:UpdateBind IsSelected.Value}" Visibility="{Binding IsLocal}"/>
                <Image Grid.Column="1">
                    <Image.Source>
                        <BitmapImage DecodePixelWidth="100" UriSource="/Resx/Logo/icon_logo_inversion.png" />
                    </Image.Source>
                </Image>

                <Grid Grid.Column="2">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="auto"/>
                        <RowDefinition/>
                        <RowDefinition Height="auto"/>
                    </Grid.RowDefinitions>

                    <TextBlock Grid.Row="0" Text="{Binding Name}" FontWeight="Bold"/>
                    <TextBlock Grid.Row="1" Text="{l:UpdateBind Description.Value}" FontSize="10" TextWrapping="Wrap"/>

                    <ProgressBar Grid.Row="2" Height="2" Margin="0 5" IsIndeterminate="True" Visibility="{l:BoolToVisBind IsUploading.Value}"/>
                </Grid>

                <Grid Grid.Column="3" Margin="12 0 0 0">
                    <Grid.Resources>
                        <Style TargetType="TextBlock">
                            <Setter Property="FontSize" Value="12"/>
                            <Setter Property="HorizontalAlignment" Value="Right"/>
                        </Style>
                    </Grid.Resources>

                    <Grid.RowDefinitions>
                        <RowDefinition/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>

                    <TextBlock Grid.Row="0" Margin="0 2" Text="{l:UpdateBind Version.Value}" Visibility="{Binding IsLocal}"/>

                    <Grid Grid.Row="1" Visibility="{l:BoolToVisBind CanUpload.Value}" VerticalAlignment="Bottom">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="auto"/>
                            <ColumnDefinition Width="auto"/>
                        </Grid.ColumnDefinitions>

                        <Grid Grid.Column="1" Visibility="{Binding IsLocal}">
                            <Button Margin="5 0" Style="{StaticResource WebToolButton}" Content="{fa:Icon CircleArrowUp}" Height="13"
                                ToolTip="Download new version" cal:Message.Attach="DownloadPackage" 
                                Visibility="{l:InvBoolToVisBind IsUploading.Value}"/>

                            <fa:IconBlock Margin="5 0"  Style="{StaticResource PackageSpinnerStyle}" FontSize="13"
                                          Visibility="{l:BoolToVisBind IsUploading.Value}"/>
                        </Grid>

                        <TextBlock Grid.Column="2" Margin="0 0 0 2" Text="{l:UpdateBind RemoteVersion.Value}"/>
                    </Grid>
                </Grid>
            </Grid>
        </Border>
    </DataTemplate>

    <DataTemplate x:Key="SourceTemplate">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="auto"/>
                <RowDefinition/>
            </Grid.RowDefinitions>

            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>

                <ToggleButton x:Name="hiddenBtn" Style="{StaticResource ToolToggleButton}" FontSize="17" IsChecked="True">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto"/>
                            <ColumnDefinition Width="auto"/>
                        </Grid.ColumnDefinitions>
                        <fa:IconBlock Grid.Column="0">
                            <fa:IconBlock.Style>
                                <Style TargetType="fa:IconBlock">
                                    <Setter Property="FontSize" Value="12"/>
                                    <Setter Property="Icon" Value="ChevronDown"/>
                                    <Setter Property="FontFamily" Value="/FontAwesome.Sharp;component/fonts/#Font Awesome 6 Free Solid"/>
                                    <Setter Property="Foreground" Value="Black"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding IsChecked, ElementName=hiddenBtn}" Value="False">
                                            <Setter Property="Icon" Value="ChevronRight"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </fa:IconBlock.Style>
                        </fa:IconBlock>
                        <TextBlock Grid.Column="1" FontWeight="DemiBold" Text="{Binding Name}" VerticalAlignment="Bottom" Margin="5 0"/>
                    </Grid>
                </ToggleButton>

                <Button Grid.Column="1" Style="{StaticResource BaseToolButton}" FontSize="17" Content="{fa:Icon Github}" ToolTip="{Binding Link}" 
                        cal:Message.Attach="OpenSourceInBrowser" Margin="0"/>
            </Grid>

            <ListView Grid.Row="1" ItemsSource="{Binding BotsInfo}" ItemTemplate="{StaticResource BotMetadataItemTemplate}" 
                      SelectedItem="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListView}}, Path=DataContext.SelectedBot.Value}"
                      Visibility="{l:BoolToVisBind IsChecked, ElementName=hiddenBtn}"/>
        </Grid>
    </DataTemplate>

    <ControlTemplate x:Key="BotsRepositoryView.Template.Classic">
        <Grid Background="{TemplateBinding Background}">
            <Grid.Resources>
                <Style TargetType="ListView">
                    <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
                    <Setter Property="Background" Value="Transparent"/>
                    <Setter Property="BorderThickness" Value="0"/>
                </Style>

                <Style TargetType="ListViewItem">
                    <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                    <Setter Property="Margin" Value="0"/>
                    <!--need to reset-->
                    <Setter Property="Padding" Value="0"/>
                    <!--need to reset-->
                </Style>
            </Grid.Resources>

            <TabControl Grid.Column="0" SelectedIndex="{l:UpdateBind SelectedTabIndex.Value}">
                <TabItem Header="Installed">
                    <Grid Margin="5 0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="2*"/>
                            <ColumnDefinition Width="auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>

                        <Grid Grid.Column="0">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="auto"/>
                                <RowDefinition Height="auto"/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>

                            <TextBlock Text="{Binding Name}" FontSize="20" FontWeight="Bold"/>

                            <Grid Margin="12 5 0 5" Grid.Row="1">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="auto"/>
                                    <ColumnDefinition Width="auto"/>
                                    <ColumnDefinition/>
                                    <ColumnDefinition Width="auto"/>
                                    <ColumnDefinition Width="auto"/>
                                </Grid.ColumnDefinitions>

                                <CheckBox Grid.Column="0" IsChecked="{l:UpdateBind SelectAllBots.Value}"/>
                                <TextBox Grid.Column="1" Margin="10 0" Style="{StaticResource SearchBlock}" Text="{l:UpdateBind FilteredInstalledString.Value, Delay=200}"/>

                                <CheckBox Grid.Column="3" Content="Has updates" IsChecked="{l:UpdateBind OnlyWithUpdates.Value}"/>
                                <l:FlatButton Grid.Column="4" Margin="10 0 0 0" Content="Update All"
                                          cal:Message.Attach="UpdateAllSelectedBots"
                                          IsEnabled="{l:UpdateBind CanUpdateAllBots.Value}"/>
                            </Grid>
                            <ListView x:Name="localBots" Grid.Row="2" ItemsSource="{Binding CurrentBots}" SelectedItem="{l:UpdateBind SelectedBot.Value}" 
                                      ItemTemplate="{StaticResource BotMetadataItemTemplate}" Visibility="{l:BoolToVisBind CollectionsRefreshed.Value}"/>

                            <fa:IconBlock Grid.Row="2" Style="{StaticResource SpinnerStyle}" Visibility="{l:InvBoolToVisBind CollectionsRefreshed.Value}"/>
                        </Grid>

                        <Rectangle Grid.Column="1" Style="{StaticResource ContentSplitter}"/>

                        <Control Grid.Column="2" DataContext="{l:UpdateBind SelectedBot.Value}" Template="{StaticResource SelectedMetadataControl}" 
                                 Visibility="{Binding SelectedItem, ElementName=localBots, Converter={StaticResource NullOrEmptyToVis}}"/>
                    </Grid>
                </TabItem>
                <TabItem Header="Browse">
                    <Grid Margin="5 0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="2*"/>
                            <ColumnDefinition Width="auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>

                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="auto"/>
                                <RowDefinition Height="auto"/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>

                            <TextBlock Text="Connected repositories" FontSize="20" FontWeight="Bold"/>

                            <Grid Grid.Row="1" Margin="0 5">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="auto"/>
                                    <ColumnDefinition/>
                                    <ColumnDefinition Width="auto"/>
                                </Grid.ColumnDefinitions>

                                <TextBox Style="{StaticResource SearchBlock}" Text="{l:UpdateBind FilteredSourceString.Value, Delay=200}"/>

                                <Button Grid.Column="2" ToolTip="Refresh all sources" Style="{StaticResource WebToolButton}" FontSize="14" cal:Message.Attach="RefreshSources">
                                    <StackPanel Orientation="Horizontal">
                                        <fa:IconBlock Icon="Refresh"/>
                                        <TextBlock Text="Refresh" Margin="2 0" FontFamily="Segoe UI"/>
                                    </StackPanel>
                                </Button>
                            </Grid>

                            <ListView Grid.Row="2" ItemsSource="{Binding Sources}" ItemTemplate="{StaticResource SourceTemplate}" ItemContainerStyle="{StaticResource ListViewUnselectedItem}"
                                      Visibility="{l:BoolToVisBind CollectionsRefreshed.Value}"/>

                            <fa:IconBlock Grid.Row="2" Style="{StaticResource SpinnerStyle}" Visibility="{l:InvBoolToVisBind CollectionsRefreshed.Value}"/>
                        </Grid>

                        <Rectangle Grid.Column="1" Style="{StaticResource ContentSplitter}"/>

                        <Control Grid.Column="2" DataContext="{l:UpdateBind SelectedBot.Value}" Template="{StaticResource SelectedMetadataControl}"
                                 Visibility="{l:UpdateBind RelativeSource={RelativeSource AncestorType={x:Type Grid}}, Path=DataContext.SelectedBot.Value, 
                                 Converter={StaticResource NullOrEmptyToVis}}"/>
                    </Grid>
                </TabItem>
            </TabControl>
        </Grid>
    </ControlTemplate>

    <Style x:Key="BotsRepositoryViewStyle.Classic" TargetType="Window">
        <Setter Property="Template" Value="{StaticResource BotsRepositoryView.Template.Classic}"/>
        <Setter Property="Background" Value="{DynamicResource Dialog_Background}"/>
        <Setter Property="ResizeMode" Value="CanResize" />
        <Setter Property="Width" Value="1100"/>
        <Setter Property="Height" Value="700"/>
        <Setter Property="MinWidth" Value="400"/>
        <Setter Property="MinHeight" Value="300"/>
        <Setter Property="ShowInTaskbar" Value="False"/>
    </Style>
</ResourceDictionary>