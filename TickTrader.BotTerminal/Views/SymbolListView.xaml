<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:cal="http://www.caliburnproject.org"
    xmlns:l="clr-namespace:TickTrader.BotTerminal">

    <ControlTemplate x:Key="SymbolListView.Old">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition/>
            </Grid.RowDefinitions>

            <Grid Grid.Row="0" Margin="5,5,5,0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="22"/>
                    <ColumnDefinition/>
                    <ColumnDefinition Width="50"/>
                    <ColumnDefinition Width="10"/>
                    <ColumnDefinition Width="50"/>
                    <ColumnDefinition Width="10"/>
                    <ColumnDefinition/>
                    <ColumnDefinition Width="24"/>
                </Grid.ColumnDefinitions>

                <TextBlock Grid.Column="1" Text="Symbol"/>
                <TextBlock Grid.Column="2" Text="Bid" HorizontalAlignment="Right"/>
                <TextBlock Grid.Column="4" Text="Ask" HorizontalAlignment="Right"/>
                <TextBlock Grid.Column="6" Text="Time"/>

            </Grid>

            <ListBox Name="Symbols"
                 Grid.Row="1"
                 Style="{DynamicResource SymbolListBox_Style}"
                 ItemsSource="{Binding Symbols}"
                 SelectedItem="{Binding SelectedSymbol.Value}">
                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <ContentControl cal:View.Model="{Binding}" IsTabStop="False" />
                    </DataTemplate>
                </ListBox.ItemTemplate>
            </ListBox>

        </Grid>
    </ControlTemplate>

    <Style x:Key="DataGridCell.Text.Classic" TargetType="TextBlock">
        <Setter Property="Margin" Value="3"/>
    </Style>

    <Style x:Key="DataGridCell.SymbolName.Classic" TargetType="TextBlock">
        <Setter Property="Margin" Value="10,3,10,3"/>
    </Style>

    <Style x:Key="BidTextStyle.Classic" TargetType="TextBlock" BasedOn="{StaticResource DataGridCell.Text.Classic}">
        <Setter Property="HorizontalAlignment" Value="Right"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding Bid.Direction.Value}" Value="{x:Static l:RateChangeDirections.Up}">
                <Setter Property="Foreground" Value="{DynamicResource RateUpColor}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Bid.Direction.Value}" Value="{x:Static l:RateChangeDirections.Down}">
                <Setter Property="Foreground" Value="{DynamicResource RateDownColor}"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="AskTextStyle.Classic" TargetType="TextBlock" BasedOn="{StaticResource DataGridCell.Text.Classic}">
        <Setter Property="HorizontalAlignment" Value="Right"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding Ask.Direction.Value}" Value="{x:Static l:RateChangeDirections.Up}">
                <Setter Property="Foreground" Value="{DynamicResource RateUpColor}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Ask.Direction.Value}" Value="{x:Static l:RateChangeDirections.Down}">
                <Setter Property="Foreground" Value="{DynamicResource RateDownColor}"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="DataGridCell.Classic" TargetType="{x:Type DataGridCell}">
        <Setter Property="Background" Value="{DynamicResource Shell_PrimaryBackground}"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridCell}">
                    <Border Background="{TemplateBinding Background}">
                        <ContentPresenter/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="{DynamicResource Shell_SecondaryBackground}"/>
                <Setter Property="Foreground" Value="{DynamicResource Shell_PrimaryForeground}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <ControlTemplate x:Key="SymbolListView.Classic">
        <DataGrid FrozenColumnCount="1" ItemsSource="{Binding Symbols}" Style="{DynamicResource DataGrid_Style}" CellStyle="{StaticResource DataGridCell.Classic}"
                  cal:Message.Attach="[Event MouseDoubleClick] = [Action OpenNewChart()]" SelectedItem="{Binding SelectedSymbol.Value}">
            <DataGrid.Columns>
                <DataGridTextColumn Binding="{Binding SymbolName}" Header="Symbol" Width="Auto" ElementStyle="{StaticResource DataGridCell.SymbolName.Classic}" CanUserResize="False" />
                <DataGridTextColumn Header="Bid" Width="Auto" Binding="{Binding Bid.Rate.DisplayValue}" CanUserSort="False" ElementStyle="{StaticResource BidTextStyle.Classic}" CanUserResize="False"/>
                <DataGridTextColumn Header="Ask" Width="Auto" Binding="{Binding Ask.Rate.DisplayValue}" CanUserSort="False" ElementStyle="{StaticResource AskTextStyle.Classic}" CanUserResize="False"/>
                <DataGridTextColumn Header="Time" Width="Auto" Binding="{Binding QuoteTime.DisplayValue}" SortMemberPath="QuoteTime.Value" ElementStyle="{StaticResource DataGridCell.Text.Classic}" CanUserResize="False" />
            </DataGrid.Columns>
            <DataGrid.ContextMenu>
                <ContextMenu>
                    <MenuItem Header="{l:Resx ContextMenu_NewChart}" cal:Message.Attach="[Event Click] = [Action OpenNewChart()]"/>
                </ContextMenu>
            </DataGrid.ContextMenu>
        </DataGrid>
    </ControlTemplate>

    <Style x:Key="SymbolListViewStyle" TargetType="UserControl">
        <Setter Property="Template" Value="{StaticResource SymbolListView.Old}"/>
    </Style>

    <Style x:Key="SymbolListViewStyle.Classic" TargetType="UserControl">
        <Setter Property="Template" Value="{StaticResource SymbolListView.Classic}"/>
    </Style>
</ResourceDictionary>