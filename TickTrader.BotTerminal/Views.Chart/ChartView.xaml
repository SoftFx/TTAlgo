<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:cal="http://www.caliburnproject.org"
    xmlns:s="http://schemas.abtsoftware.co.uk/scichart"
    xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:lv="clr-namespace:LiveChartsCore.SkiaSharpView.WPF;assembly=LiveChartsCore.SkiaSharpView.WPF"
    xmlns:lvc="clr-namespace:TickTrader.BotTerminal.Controls.Chart"
    xmlns:l="clr-namespace:TickTrader.BotTerminal"
    xmlns:scm="clr-namespace:System.ComponentModel;assembly=WindowsBase">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/Resx/Styles.Classic/Charts.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <ControlTemplate x:Key="IndicatorOutputRolloverTooltipTemplate">
        <Rectangle Fill="Red" Width="5" Height="5"/>
    </ControlTemplate>

    <BooleanToVisibilityConverter x:Key="boolToVisibilityConverter"/>

    <Style x:Key="PluginsMenu" TargetType="MenuItem">
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <HierarchicalDataTemplate ItemsSource="{Binding Items}">
                    <TextBlock Text="{Binding Name}"/>
                    <HierarchicalDataTemplate.ItemTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding DisplayName}"/>
                        </DataTemplate>
                    </HierarchicalDataTemplate.ItemTemplate>
                </HierarchicalDataTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <ControlTemplate x:Key="ChartView" x:Shared="False">
        <Grid Margin="4">
            <Grid.ContextMenu>
                <ContextMenu Style="{DynamicResource ContextMenu_Style}">

                    <l:MenuItemSelector Header="{l:Resx ContextMenu_Periods}"
                            ItemsSource="{Binding AvailablePeriods}"
                            SelectedItem="{Binding SelectedTimeframe, Mode=TwoWay}"
                            IsEnabled="{Binding UiLock.IsNotLocked}"/>

                    <l:MenuItemSelector Header="Bars count"
                            ItemsSource="{Binding AvailableChartSizes}"
                            SelectedItem="{Binding SelectedChartSize, Mode=TwoWay}"
                            IsEnabled="{Binding UiLock.IsNotLocked}"/>

                    <Separator/>

                    <MenuItem Header="Crosshair" IsCheckable="True" IsChecked="{Binding EnableCrosshair}"/>
                    <MenuItem x:Name="autoScrollControl" Header="AutoScroll" IsCheckable="True"/>
                    <MenuItem x:Name="chartLegend" Header="Legend" IsCheckable="True"/>

                    <Separator/>

                    <l:MenuItemSelector Header="{l:Resx ContextMenu_ChartType}" 
                            ItemsSource="{Binding Chart.AvailableChartTypes}"
                            SelectedItem="{Binding Chart.SelectedChartType, Mode=TwoWay}"
                            IsEnabled="{Binding UiLock.IsNotLocked}"/>

                    <MenuItem Header="Object List..." cal:Message.Attach="OpenObjectList" />

                    <MenuItem Header="Add Indicator" IsEnabled="{Binding CanAddIndicator}"
                              Visibility="{Binding Converter={StaticResource boolToVisibilityConverter}, Path=Chart.HasAvailableIndicators}"
                              cal:Bind.ModelWithoutContext="{Binding Path=DataContext, RelativeSource={RelativeSource Self}}"
                              cal:Message.Attach="OpenPlugin($originalsourcecontext)">
                        <MenuItem.Resources>
                            <CollectionViewSource x:Key="IndicatorsViewSrc" Source="{Binding Chart.AvailableIndicators}">
                                <CollectionViewSource.SortDescriptions>
                                    <scm:SortDescription PropertyName="Category" />
                                    <scm:SortDescription PropertyName="DisplayName" />
                                </CollectionViewSource.SortDescriptions>
                                <CollectionViewSource.GroupDescriptions>
                                    <PropertyGroupDescription PropertyName="Category" />
                                </CollectionViewSource.GroupDescriptions>
                            </CollectionViewSource>
                        </MenuItem.Resources>
                        <MenuItem.Style>
                            <Style TargetType="MenuItem" BasedOn="{StaticResource PluginsMenu}">
                                <Setter Property="ItemsSource" Value="{Binding Source={StaticResource IndicatorsViewSrc}, Path=Groups}"/>
                            </Style>
                        </MenuItem.Style>
                    </MenuItem>

                    <MenuItem Header="Add Bot" IsEnabled="{Binding CanAddBot}"
                              Visibility="{Binding Converter={StaticResource boolToVisibilityConverter}, Path=Chart.HasAvailableBotTraders}"
                              cal:Bind.ModelWithoutContext="{Binding Path=DataContext, RelativeSource={RelativeSource Self}}"
                              cal:Message.Attach="OpenPlugin($originalsourcecontext)">
                        <MenuItem.Resources>
                            <CollectionViewSource x:Key="BotTradersViewSrc" Source="{Binding Chart.AvailableBotTraders}">
                                <CollectionViewSource.SortDescriptions>
                                    <scm:SortDescription PropertyName="Category" />
                                    <scm:SortDescription PropertyName="DisplayName" />
                                </CollectionViewSource.SortDescriptions>
                                <CollectionViewSource.GroupDescriptions>
                                    <PropertyGroupDescription PropertyName="Category" />
                                </CollectionViewSource.GroupDescriptions>
                            </CollectionViewSource>
                        </MenuItem.Resources>
                        <MenuItem.Style>
                            <Style TargetType="MenuItem" BasedOn="{StaticResource PluginsMenu}">
                                <Setter Property="ItemsSource" Value="{Binding Source={StaticResource BotTradersViewSrc}, Path=Groups}"/>
                            </Style>
                        </MenuItem.Style>
                    </MenuItem>

                    <MenuItem Header="Indicators" ItemsSource="{Binding Indicators}"
                              Visibility="{Binding Converter={StaticResource boolToVisibilityConverter}, Path=HasIndicators}">
                        <MenuItem.ItemTemplate>
                            <DataTemplate>
                                <StackPanel Orientation="Horizontal">
                                <TextBlock Text="{Binding DisplayName}" VerticalAlignment="Center"/>
                                <l:FlatButton Margin="5,0" Width="14" Height="14" Padding="0" Content="X" BorderThickness="0"
                                              VerticalAlignment="Center" cal:Message.Attach="Close" FontFamily="Consolas"/>
                                </StackPanel>
                            </DataTemplate>
                        </MenuItem.ItemTemplate>
                    </MenuItem>

                    <Separator/>

                    <MenuItem Header="Dump chart data" cal:Message.Attach="DumpChartData" />

                </ContextMenu>
            </Grid.ContextMenu>
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <lvc:CartesianScrollBarChart x:Name="mainChart" BarsSource="{Binding BarChart.BarVector}" 
                                         Period="{Binding SelectedTimeframe, UpdateSourceTrigger=PropertyChanged}"
                                         ChartType="{Binding Chart.SelectedChartType, UpdateSourceTrigger=PropertyChanged}"
                                         AutoScroll="{Binding ElementName=autoScrollControl, Path=IsChecked, UpdateSourceTrigger=PropertyChanged}"
                                         ShowLegend="{Binding ElementName=chartLegend, Path=IsChecked, UpdateSourceTrigger=PropertyChanged}"
                                         EnableCrosshair="{Binding EnableCrosshair, UpdateSourceTrigger=PropertyChanged}"
                                         IndicatorObserver="{Binding IndicatorObserver}"
                                         PricePrecision="{Binding PriceDigits, UpdateSourceTrigger=PropertyChanged}" />
            <Border Visibility="{Binding Path=Chart.IsLoading, Converter={StaticResource boolToVisibilityConverter}}"
                Background="{DynamicResource ChartBackground}">
                <l:BusyIndicator/>
            </Border>
            <ItemsControl Grid.Row="1" ItemsSource="{Binding IndicatorObserver.SubWindows}">
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <lvc:CartesianTargetIndicatorChart MinHeight="100"
                                                           Series="{Binding Series}"
                                                           ChartSettings="{Binding Settings}"
                                                           XAxes="{Binding ElementName=mainChart, Path=XAxes}"
                                                           ZoomMode="{Binding ElementName=mainChart, Path=ZoomMode}"
                                                           ShowLegend="{Binding ElementName=chartLegend, Path=IsChecked, UpdateSourceTrigger=PropertyChanged}"/>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>
            <i:Interaction.Behaviors>
                <l:DropBehavior/>
            </i:Interaction.Behaviors>

        </Grid>

    </ControlTemplate>

    <Style x:Key="ChartViewStyle.Classic" TargetType="UserControl" >
        <Setter Property="Template" Value="{StaticResource ChartView}"/>
        <Setter Property="Background" Value="{DynamicResource ChartBackground}"/>
    </Style>

</ResourceDictionary>
