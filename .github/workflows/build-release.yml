name: TTAlgo build
on:
  # push:
  #   branches: [master, develop]

  workflow_dispatch:
    inputs:
      isPreRelease:
        description: 'PreRelease'
        type: boolean
        required: true
        default: true
      buildNumberOverride:
        description: 'Override build number'
        type: number
        required: false
env:
  BUILD_OUTPUT_FOLDER: build.output

jobs:
  init:
    runs-on: ubuntu-latest
    outputs:
      PUBLISH_RELEASE: ${{ steps.calc-outputs.outputs.pub }}
      IS_PRE_RELELASE: ${{ steps.calc-outputs.outputs.pre }}
    steps:
      - name: Calculate outputs
        id: calc-outputs
        run: |
          echo "pub=${{ github.event_name == 'workflow_dispatch' }}" >> $GITHUB_OUTPUT
          echo "pub_test=${{ github.event_name == 'workflow_dispatch' || (github.event_name == 'push' && contains(fromJSON('["master", "develop"]'), github.ref_name)) }}" >> $GITHUB_OUTPUT
          echo "pre=${{ github.event_name == 'workflow_dispatch' && inputs.isPreRelease }}" >> $GITHUB_OUTPUT
          echo "pre_test=${{ (github.event_name == 'workflow_dispatch' && inputs.isPreRelease) || (github.event_name == 'push' && github.ref_name != 'master') }}" >> $GITHUB_OUTPUT

      - name: Print outputs
        run: |
          echo "pub=${{ steps.calc-outputs.outputs.pub }}"
          echo "pub_test=${{ steps.calc-outputs.outputs.pub_test }}"
          echo "pre=${{ steps.calc-outputs.outputs.pre }}"
          echo "pre_test=${{ steps.calc-outputs.outputs.pre_test }}"

  build:
    if: needs.init.outputs.PUBLISH_RELEASE == 'true'
    runs-on: windows-latest
    needs: init
    env:
      BootstrapperPath: ./build.ps1
      BuildScriptPath: ./build.cake
      BuildNumber: ${{ github.run_number }}
    outputs:
      VERSION: ${{ steps.run-cake.outputs.version }}
      ARTIFACTS_NAME: ${{ steps.build-artifacts-name.outputs.artifacts }}
    steps:
      - uses: actions/checkout@v3

      - name: Override Build number
        if: inputs.buildNumberOverride != ''
        run: |
          echo "Using BuildNumber from input: ${{ inputs.buildNumberOverride }}"
          echo "BuildNumber=${{ inputs.buildNumberOverride }}" >> $env:GITHUB_ENV

      - name: Setup nuget cache
        uses: actions/cache@v3
        with:
          path: ~/.nuget/packages
          # Since we don't use RestorePackagesWithLockFile (**/packages.lock.json), use project files insteads
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}
          restore-keys: |
            ${{ runner.os }}-nuget

      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: '16.x'
          cache: 'npm'
          cache-dependency-path: '**/package-lock.json'

      - name: Run Cake bootstrapper
        id: run-cake
        # Cake script sets output 'version'
        run: >
          ${{ env.BootstrapperPath }}
          --BuildNumber=${{ env.BuildNumber }}
          --ArtifactsDirName=${{ env.BUILD_OUTPUT_FOLDER }}
          --SkipTests=False

      - name: Build Artifacts Name
        id: build-artifacts-name
        run: echo "artifacts=TTAlgo Release ${{ steps.run-cake.outputs.version }}" >> $env:GITHUB_OUTPUT

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ steps.build-artifacts-name.outputs.artifacts }}
          path: ${{ env.BUILD_OUTPUT_FOLDER }}

  create-release:
    if: needs.init.outputs.PUBLISH_RELEASE == 'true'
    runs-on: ubuntu-latest
    needs: [init, build]
    env:
      ReleaseNote: "ReleaseNote.md"
    steps:
      - uses: actions/checkout@v3

      - name: Build tag
        id: build-tag
        run: echo "tag=v${{ needs.build.outputs.VERSION }}" >> $GITHUB_OUTPUT

      - name: Push tag
        uses: rickstaa/action-create-tag@v1
        with:
          tag: ${{ steps.build-tag.outputs.tag }}
          message: "Release ${{ steps.build-tag.outputs.tag }}"
          force_push_tag: true

      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: ${{ needs.build.outputs.ARTIFACTS_NAME }}
          path: ${{ env.BUILD_OUTPUT_FOLDER }}

      - name: Create release
        uses: ncipollo/release-action@v1
        with:
          name: ${{ needs.build.outputs.VERSION }}
          tag: ${{ steps.build-tag.outputs.tag }}
          # sets target_commitish field, doesn't change tag that already exists
          commit: ${{ github.ref_name }}
          token: ${{ secrets.GITHUB_TOKEN }}
          artifacts: ${{ env.BUILD_OUTPUT_FOLDER }}/*.zip, ${{ env.BUILD_OUTPUT_FOLDER }}/*.exe, ${{ env.BUILD_OUTPUT_FOLDER }}/*.json
          bodyFile: ${{ env.ReleaseNote }}
          prerelease: ${{ needs.init.outputs.IS_PRE_RELELASE }}
          allowUpdates: true